<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>nothing0x00</title><link href="/" rel="alternate"></link><link href="/feeds/all-en.atom.xml" rel="self"></link><id>/</id><updated>2020-02-17T00:00:00-05:00</updated><subtitle>Reflections on Hacking, Information Theory and Random Ephemera</subtitle><entry><title>Walkthrough: Nightfall CTF</title><link href="/nightfall.html" rel="alternate"></link><published>2020-02-17T00:00:00-05:00</published><updated>2020-02-17T00:00:00-05:00</updated><author><name>nothing0x00</name></author><id>tag:None,2020-02-17:/nightfall.html</id><summary type="html">&lt;p&gt;Walkthrough for Nightfall CTF&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nightfall is the second machine in a series of three (Dusk, Nightfall, Sunrise) that we will be walking through here.&lt;/p&gt;
&lt;p&gt;So, without further adieu, let's begin...&lt;/p&gt;
&lt;p&gt;The initial enumeration of the system shows that a number of ports are open, including ports 21, 22, 80, 139, 445 and 3306.&lt;/p&gt;
&lt;p&gt;&lt;img alt="initial_nmap" src="/images/nightfall/initial_nmap.png"&gt;&lt;/p&gt;
&lt;p&gt;The initial foothold was difficult to identify, with no attack paths being made apparent through additional scanning, attempts to find pages using gobuster and attempting to brute force the SQL service.&lt;/p&gt;
&lt;p&gt;The first piece of useful information came from running enum4linux on the SMB and NBT services. This yielded not only information on the workgroups and domains which are related to the machine, but it also netted some usernames.&lt;/p&gt;
&lt;p&gt;&lt;img alt="workgroups" src="/images/nightfall/workgroups.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="users" src="/images/nightfall/users.png"&gt;&lt;/p&gt;
&lt;p&gt;After more enumeration it was clear that no technical forms of exploitation were going to emerge as likely, so the strategy moved into less technical forms of exploitation, specifically brute force attacks. After attempting attacks against FTP, SSH and MYSQL using the fasttrack list, I then moved to the rockyou list and got some valid credentials for the FTP service.&lt;/p&gt;
&lt;p&gt;&lt;img alt="brute_force_ftp" src="/images/nightfall/brute_ftp.png"&gt;&lt;/p&gt;
&lt;p&gt;The FTP server did not contain any usable data, but the directory was the /home/matt directory. Users with valid credentials for the matt account also have read/write access to the directory So, to gain access to the machine I first created a .ssh directory, then wrote an authorized_keys file locally and transfered it to the remote server over FTP.&lt;/p&gt;
&lt;p&gt;&lt;img alt="ftp_auth_keys" src="/images/nightfall/ftp_put_authorized_keys.png"&gt;&lt;/p&gt;
&lt;p&gt;With the authorized_keys file in place it was possible to use the SSH keys stored on the attacking machine to log into the machine as matt.&lt;/p&gt;
&lt;p&gt;&lt;img alt="ssh_login_matt" src="/images/nightfall/ssh_login_matt.png"&gt;&lt;/p&gt;
&lt;p&gt;After landing on the machine the first step, after seeing if I can get into other home folders and access files (I cannot), was to pull down LinEnum and enumerate the machine. The initial results show an interesting SUID and SGID file, owned and editable by nightfall.&lt;/p&gt;
&lt;p&gt;&lt;img alt="suid" src="/images/nightfall/suid.png"&gt;&lt;/p&gt;
&lt;p&gt;The /scripts/find file runs as nightfall. If we assume that this is the same as the find binary, then by extension the find command is capable of executing commands through the -exec flag. After a test we can confirm that the functionality of this /scripts/find binary functions similarly to the find command. Using this information it was possible to execute /bin/bash in the context of the nightfall user to achieve lateral privileges to the nightfall user.&lt;/p&gt;
&lt;p&gt;&lt;img alt="suid_exploitation" src="/images/nightfall/nightfall_suid_exploitation.png"&gt;&lt;/p&gt;
&lt;p&gt;After achieving elevated access the first step was to grab the user.txt flag.&lt;/p&gt;
&lt;p&gt;&lt;img alt="user_flag" src="/images/nightfall/user_flag.png"&gt;&lt;/p&gt;
&lt;p&gt;Then, a similar process of establishing SSh access was replicated; a .ssh directory was created in /home/nightfall, then the public ssh key for my attacking machine was echoed into an authorized_keys file.&lt;/p&gt;
&lt;p&gt;&lt;img alt="nightfall_ssh" src="/images/nightfall/nightfall_ssh.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="nightfall_ssh_access" src="/images/nightfall/nightfall_ssh_access.png"&gt;&lt;/p&gt;
&lt;p&gt;Initial enumeration shows that we can run the cat command with root privileges through sudoing without a password.&lt;/p&gt;
&lt;p&gt;&lt;img alt="nightfall_sudo_l" src="/images/nightfall/nightfall_sudo_l.png"&gt;&lt;/p&gt;
&lt;p&gt;Using this access I read out the /etc/shadow file to the screen.&lt;/p&gt;
&lt;p&gt;&lt;img alt="shadow" src="/images/nightfall/shadow.png"&gt;&lt;/p&gt;
&lt;p&gt;Then I copied the root entry to a file called shadow on the attacking machine, and the root entry in the /etc/passwd file to a passwd file on the attacking machine. Using the unshadow command from the john password cracking suite I combined these into a crackable password hash and started john. Using this process I was able to access the root password; miguel2.&lt;/p&gt;
&lt;p&gt;&lt;img alt="john_process" src="/images/nightfall/john_process.png"&gt;&lt;/p&gt;
&lt;p&gt;After extracting the password I used it to su to root, then grabbed the flag.&lt;/p&gt;
&lt;p&gt;&lt;img alt="r00ted" src="/images/nightfall/r00ted.png"&gt;&lt;/p&gt;</content><category term="CTF"></category><category term="#CTF"></category></entry><entry><title>Walkthrough: Dusk CTF</title><link href="/dusk.html" rel="alternate"></link><published>2020-02-10T00:00:00-05:00</published><updated>2020-02-10T00:00:00-05:00</updated><author><name>nothing0x00</name></author><id>tag:None,2020-02-10:/dusk.html</id><summary type="html">&lt;p&gt;Walkthrough for Dusk CTF&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the first in a series of CTF walkthroughs. The goal of this series is to demonstrate the pathway from boot to root, and to do so with an eye toward clarity and an incremental stepping through of the process used to solve the machine.  More of these walkthroughs will be posted as they become relevant, and as I have the time to complete machines.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: At no point will there be information related to current, non-retired, machines on HackTheBox, or any walkthroughs of the OSCP labs, nor will I respond to inquiries about how to complete these machines&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So, with that, let's begin...&lt;/p&gt;
&lt;p&gt;When the machine boots it is allocated an IP of 192.68.56.108 (running on a Host-Only network in VirtualBox).&lt;/p&gt;
&lt;p&gt;Initial nmap scanning shows that ports 21, 22, 25, 80, 3306 and 8080 are open.&lt;/p&gt;
&lt;p&gt;&lt;img alt="nmap_image" src="/images/dusk/nmap.png"&gt;&lt;/p&gt;
&lt;p&gt;More detailed scanning did not show any obvious pathways of attack, with most services reporting back as expected. After a significant amount of enumeration the best pathway forward seemed to be to brute force a way into the machine.&lt;/p&gt;
&lt;p&gt;Attempts were made to brute force the FTP service, with no luck. Eventually I succeeded in grabbing valid credentials for the MariaDb service on port 3306, using the mysql-brute NSE script within nmap.&lt;/p&gt;
&lt;p&gt;&lt;img alt="mysql_brute_force" src="/images/dusk/mysql_brute.png"&gt;&lt;/p&gt;
&lt;p&gt;Using these credentials it was possible to log into the database remotely.&lt;/p&gt;
&lt;p&gt;&lt;img alt="mysql_login" src="/images/dusk/mysql_login.png"&gt;&lt;/p&gt;
&lt;p&gt;The database itself did not return any useful information, but because the service on port 8080 is running PHP, and because it is possible to write to the filesystem as root in SQL databases, it is theoretically possible to write a webshell to the system and access it over port 8080.&lt;/p&gt;
&lt;p&gt;The service on port 8080 is utilizing /var/tmp as a webroot, as indicated by the information displayed by the service.&lt;/p&gt;
&lt;p&gt;&lt;img alt="webroot" src="/images/dusk/8080_working_dir.png"&gt;&lt;/p&gt;
&lt;p&gt;Using the information gathered about the service it was possible to utilize the database access to write a PHP webshell to the webserver using the following command:&lt;/p&gt;
&lt;p&gt;&lt;img alt="webshell_write" src="/images/dusk/shell_write.png"&gt;&lt;/p&gt;
&lt;p&gt;The shell was then accessed at http://192.168.56.108:8080/shell2.php with commands run through the cmd parameter.&lt;/p&gt;
&lt;p&gt;&lt;img alt="webshell" src="/images/dusk/webshell.png"&gt;&lt;/p&gt;
&lt;p&gt;Using netcat a command was constructed which generated a reverse shell from the target to the attacking machine.&lt;/p&gt;
&lt;p&gt;&lt;img alt="webshell_reverse" src="/images/dusk/webshell_reverse.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="webshell_handler" src="/images/dusk/webshell_reverse_handler.png"&gt;&lt;/p&gt;
&lt;p&gt;After initial access was gained it was possible to grab the user flag.&lt;/p&gt;
&lt;p&gt;&lt;img alt="user_flag" src="/images/dusk/user.png"&gt;&lt;/p&gt;
&lt;p&gt;Next, I moved to /tmp, pulled down LinEnum and started enumeration.&lt;/p&gt;
&lt;p&gt;The initial run showed that the www-data user was able to run ping, make and sl with sudo privileges without providing a password.&lt;/p&gt;
&lt;p&gt;&lt;img alt="sudo_privs" src="/images/dusk/sudo_privs.png"&gt;&lt;/p&gt;
&lt;p&gt;Additionally, the process tree dump contained the credentials used for the FTP server, which for pyftplib are contained in the launch command.&lt;/p&gt;
&lt;p&gt;&lt;img alt="ftp_creds" src="/images/dusk/pyftp_creds.png"&gt;&lt;/p&gt;
&lt;p&gt;Using these credentials I was able to log into the FTP service, which granted me read access to the /root directory, where I was able to grab the flag.&lt;/p&gt;
&lt;p&gt;&lt;img alt="root_ftp" src="/images/dusk/root_ftp.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="r00ted" src="/images/dusk/root_flag.png"&gt;&lt;/p&gt;</content><category term="CTF"></category><category term="#CTF"></category></entry><entry><title>Welcome!</title><link href="/introduction.html" rel="alternate"></link><published>2020-02-10T00:00:00-05:00</published><updated>2020-02-10T00:00:00-05:00</updated><author><name>nothing0x00</name></author><id>tag:None,2020-02-10:/introduction.html</id><summary type="html">&lt;p&gt;Welcome!&lt;/p&gt;</summary><content type="html">&lt;p&gt;I guess the place where these things are supposed to start is that I should probably mention a bit about myself. I come into the security space from a background in academia, though the current state of academia is no place for someone trying to both pay bills and eat. So, I went into the only other thing I could both do and enjoy, what is loosely referred to as the information security space, specifically OSINT research and then pentesting.&lt;/p&gt;
&lt;p&gt;Collected here will be posts about security research, CTF writeups, tool releases and the like. Hopefully they will prove useful and contribute to the furtherance of privacy, security and digital freedom.&lt;/p&gt;</content><category term="Introduction"></category><category term="#intro"></category></entry></feed>